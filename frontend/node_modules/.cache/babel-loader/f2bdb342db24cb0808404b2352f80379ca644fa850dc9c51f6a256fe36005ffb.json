{"ast":null,"code":"var _jsxFileName = \"/Users/zzthian/Desktop/proj_CS3219/ay2324s1-course-assessment-g53/src/QuestionForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./QuestionForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionForm = props => {\n  _s();\n  const {\n    questions,\n    setQuestions,\n    COMPLEXITY\n  } = props;\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!title || !description || !category || !complexity) {\n      setErrorMessage(\"Please fill in all fields!\");\n      return;\n    }\n    const isDuplicate = questions.some(question => question.title === title || question.description === description);\n    if (isDuplicate) {\n      setErrorMessage(\"This question already exists!\");\n      return;\n    }\n    const id = questions.length + 1;\n    const question = {\n      id,\n      title,\n      description,\n      category,\n      complexity\n    };\n    setQuestions([...questions, question]);\n    setTitle(\"\");\n    setDescription(\"\");\n    setCategory(\"\");\n    setComplexity(\"\");\n    setErrorMessage(\"\");\n  };\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [complexity, setComplexity] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"QuestionForm\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"left-aligned\",\n      children: \"Question Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: event => setTitle(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          value: description,\n          onChange: event => setDescription(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: \"Category: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"category\",\n          value: category,\n          onChange: event => setCategory(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"complexity\",\n          children: \"Complexity: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"complexity\",\n          value: complexity,\n          onChange: event => setComplexity(event.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"--Please choose an option--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), Object.values(COMPLEXITY).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option,\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionForm, \"HaWVDVxtd9HhDSWPLGyi2RRHqJM=\");\n_c = QuestionForm;\nexport default QuestionForm;\nvar _c;\n$RefreshReg$(_c, \"QuestionForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","QuestionForm","props","_s","questions","setQuestions","COMPLEXITY","errorMessage","setErrorMessage","handleSubmit","event","preventDefault","title","description","category","complexity","isDuplicate","some","question","id","length","setTitle","setDescription","setCategory","setComplexity","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","target","Object","values","map","option","onClick","_c","$RefreshReg$"],"sources":["/Users/zzthian/Desktop/proj_CS3219/ay2324s1-course-assessment-g53/src/QuestionForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./QuestionForm.css\";\n\nconst QuestionForm = (props) => {\n  const { questions, setQuestions, COMPLEXITY } = props;\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (!title || !description || !category || !complexity) {\n      setErrorMessage(\"Please fill in all fields!\");\n      return;\n    }\n\n    const isDuplicate = questions.some(\n      (question) =>\n        question.title === title || question.description === description\n    );\n\n    if (isDuplicate) {\n      setErrorMessage(\"This question already exists!\");\n      return;\n    }\n\n    const id = questions.length + 1;\n    const question = { id, title, description, category, complexity };\n    setQuestions([...questions, question]);\n\n    setTitle(\"\");\n    setDescription(\"\");\n    setCategory(\"\");\n    setComplexity(\"\");\n    setErrorMessage(\"\");\n  };\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [complexity, setComplexity] = useState(\"\");\n\n  return (\n    <form className=\"QuestionForm\" onSubmit={handleSubmit}>\n      <h2 className=\"left-aligned\">Question Form</h2>\n\n      <div className=\"form-group\">\n        <div className=\"input-group\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={title}\n            onChange={(event) => setTitle(event.target.value)}\n          />\n        </div>\n\n        <div className=\"input-group\">\n          <label htmlFor=\"description\">Description: </label>\n          <textarea\n            id=\"description\"\n            value={description}\n            onChange={(event) => setDescription(event.target.value)}\n          />\n        </div>\n\n        <div className=\"input-group\">\n          <label htmlFor=\"category\">Category: </label>\n          <input\n            type=\"text\"\n            id=\"category\"\n            value={category}\n            onChange={(event) => setCategory(event.target.value)}\n          />\n        </div>\n\n        <div className=\"select-group\">\n          <label htmlFor=\"complexity\">Complexity: </label>\n          <select\n            id=\"complexity\"\n            value={complexity}\n            onChange={(event) => setComplexity(event.target.value)}\n          >\n            <option value=\"\">--Please choose an option--</option>\n            {Object.values(COMPLEXITY).map((option) => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <button type=\"submit\" className=\"button\" onClick={handleSubmit}>\n          Submit\n        </button>\n\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n      </div>\n    </form>\n  );\n};\n\nexport default QuestionForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}